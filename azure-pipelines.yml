# trigger:
# - main

# pool:
#   vmImage: ubuntu-latest

# strategy:
#   matrix:
#     Python310:
#       python.version: '3.10'
#     Python311:
#       python.version: '3.11'
#     Python312:
#       python.version: '3.12'

# steps:
#   - task: UsePythonVersion@0
#     inputs:
#       versionSpec: '$(python.version)'
#     displayName: 'Use Python $(python.version)'

#   - script: |
#       python -m pip install --upgrade pip
#       pip install -r requirements.txt
#     displayName: 'Install dependencies'

#   - task: ArchiveFiles@2
#     displayName: 'Archive files'
#     inputs:
#       rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
#       includeRootFolder: false
#       archiveType: 'zip'
#       archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
#       replaceExistingArchive: true

#   - task: PublishBuildArtifacts@1
#     inputs:
#       PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
#       publishLocation: 'Container'

#   - script: |
#       pip install pytest pytest-azurepipelines
#       pytest
#     displayName: 'pytest'
    
#   - task: AzureWebApp@1
#     inputs:
#       azureSubscription: 'Azure subscription 1(8c4146a7-6bd0-4009-92b7-66f34fd5d05f)'
#       appType: 'webAppLinux'
#       appName: 'Phytonapp'
#       package: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
trigger:
- main

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: '7ca28f53-8dd0-49cf-acfa-3a7ae4ff587b'

  # Web app name
  webAppName: 'Phytonapp'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Environment name
  environmentName: 'Phytonapp'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)

  pythonVersion: '3.11'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'

    - script: |
        python -m venv antenv
        source antenv/bin/activate
        python -m pip install --upgrade pip
        pip install setup
        pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: "Install requirements"

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool:
      vmImage: $(vmImageName)
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:

          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(pythonVersion)'
            displayName: 'Use Python version'

          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App : $(webAppName)'
            inputs:
              azureSubscription: 'Azure subscription 1(8c4146a7-6bd0-4009-92b7-66f34fd5d05f)'
              appType: 'webAppLinux'
              appName: 'newpythonapp'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'